sections:
  - title: Download and set-up
    level: 3
    items:
      - type: sub-section
        data:
          title: Bower
          level: 4
          items:
            - type: text
              data:
                text: 'The easiest way to get started with Chartist.js is by using <a href="http://bower.io/" target="_blank">bower</a>:'

            - type: code
              data:
                lang: bash
                code: bower install chartist --save

            - type: text
              data:
                text: >
                        The bower package contains the JavaScript library, CSS as well as the SASS (SCSS) files.
                        You can then integrate the desired dependencies in your project and start using them
                        immediately.

      - type: sub-section
        data:
          title: One, two, three, CSS!
          level: 4
          items:
            - type: text
              data:
                text: >
                        The quickest way to get things up and running is by using the Chartist.js CSS files.
                        The CSS is compiled from the SASS files with de default class names which are also
                        configured in the JavaScript library. You can then override the default styles or
                        modify the CSS file, however, for customization it's recommended to use the SASS
                        version of Chartist.js.

            - type: code-snippet
              data:
                id: simple-start
                lang: html

      - type: sub-section
        data:
          title: The SASS way
          level: 4
          items:
            - type: text
              data:
                text: >
                        If you like to customize your charts you can either remove the CSS fully and write your
                        own selectors using the Chartist.js SASS mixins or you just use the Chartist.js SASS
                        settings file to customize the look and feel of your charts.

            - type: text
              data:
                text: >
                        Styling inline SVG with CSS is a breeze and you should also consider writing your own
                        selectors for your charts and using the SASS mixins. You can read more about using the
                        SASS mixins in the <a href="#advanced">advanced</a> section.

            - type: text
              data:
                text: >
                        To customize the style of your charts using the SASS settings file you should copy the
                        settings file to your own SASS folder.

            - type: code
              data:
                lang: bash
                code: cp bower_components/chartist/libdist/scss/settings/_chartist-settings.scss styles

            - type: text
              data:
                text: >
                        Then just import your copy of the settings file before you import the chartist.scss
                        file and change the settings in your copy as desired.

            - type: code-snippet
              data:
                id: custom-include
                lang: scss

            - type: heading
              data:
                level: 5
                title: Default settings

            - type: text
              data:
                text: >
                        The settings file contains all relevant variables used in the mixins and while
                        generating the default classes. You can simply change the settings for styling your
                        own charts. If you want to override certain settings based on state or pseeudo
                        selectors, you can use the individual mixins to only override specific styles.

            - type: text
              data:
                text: >
                        Take a look at the settings to see how to customize the style of the defalt Chartist.js
                        class selectors.

            - type: code-snippet
              data:
                id: default-sass-settings
                button: Show default settings
                path: source/styles/settings/_chartist-settings.scss
                lang: scss

  - title: Create your first chart
    level: 3
    items:
      - type: text
        data:
          text: >
                  In this section you'll go through a simple example of how to use Chartist.js in your project.
                  You'll learn the default stages you go through when creating and customizing a basic line chart.
                  If you'd like to see more in depth and advanced examples you should check out
                  the <a href="#advanced">advanced</a> section or the <a href="demos.html">demo page</a>.

      - type: sub-section
        data:
          title: As simple as it can get
          level: 4
          items:
            - type: text
              data:
                text: >
                        In order to create a simple line chart you only need to have a container element and
                        initialize Chartist.js passing in the selector for the container element. Give the
                        container the class ct-chart so that it will get the default styles.

            - type: code-snippet
              data:
                id: simple-start-fixed-chart
                lang: js

      - type: sub-section
        data:
          title: The configuration of your chart
          level: 4
          items:
            - type: text
              data:
                text: >
                        Chartist.js is built very flexible and almost everything within your charts can be configured.
                        In the default settings (that you can check in the <a href="apidoc/">API Documentation</a>)
                        you'll get some predefined defaults applied to your charts.

            - type: text
              data:
                text: >
                        You can always override the default settings of your charts by passing in a configuration
                        object at creation time.

            - type: example-chart
              data:
                id: simple-configuration-chart
                classes: ct-chart ct-golden-section
                type: Line

            - type: code-snippet
              data:
                id: simple-configuration
                button: Show code and comments
                lang: js

      - type: sub-section
        data:
          title: Responsive sugar topping
          level: 4
          items:
            - type: text
              data:
                text: >
                        Responsive web design is all based on
                        <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries" taget="_blank">media queries</a>
                        as you are probably already aware. Media queries are great and they help you to define media related
                        conditions that you can use to apply different styles for different media.
            - type: text
              data:
                text: >
                        Sometimes it's also required to have different behavior on certain media and it's possible that
                        a specific component of your web site should behave in an other way on a small media than on a
                        large one. Luckily there is window.matchMedia in your browser that comes to the rescue. With
                        matchMedia it's possible to let your javascript react differently based on CSS3 media queries.

            - type: heading
              data:
                level: 5
                title: Responsive setting overrides

            - type: text
              data:
                text: >
                        Configuring different chart behavior for various media is made simple with an override
                        mechanism. The priority of the override mechanism is based on order of specification of
                        the matching media queries.

            - type: text
              data:
                text: >
                        The following example uses different label interpolations (to save some space) on small media
                        as well as different spacing between the bars of the bar chart series. Resize your browser window
                        to see the effect.

            - type: example-chart
              data:
                id: example-simple-bar
                classes: ct-chart ct-golden-section
                type: Bar

            - type: code-snippet
              data:
                id: example-simple-bar-snippet
                button: Show code and comments
                lang: js

            - type: hint
              data:
                title: Cross-browser support
                classes: hint-cross-browser
                text: >
                        For IE9 you need to use a matchMedia polyfill. You should take a look at
                        <a href="https://github.com/paulirish/matchMedia.js/">Paul Irish's matchMedia polyfill</a>.

  - title: Advanced
    level: 3
    items:
      - type: text
        data:
          text: Coming soon...

      - type: sub-section
        data:
          title: Adding behavior to your charts
          level: 4
          items:
            - type: text
              data:
                text: Coming soon...
